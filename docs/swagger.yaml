basePath: /
definitions:
  request.CreateELogBookRequest:
    properties:
      deskripsi:
        type: string
      end_time:
        type: integer
      id_konsulen:
        type: integer
      jumlah:
        type: integer
      medical_record:
        type: string
      start_time:
        type: integer
      title:
        type: string
    type: object
  request.CreateKonsulenRequest:
    properties:
      name:
        type: string
      password:
        type: string
      spesialis:
        type: string
      username:
        type: string
    type: object
  request.CreateUserRequest:
    properties:
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  request.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  request.UpdateAbsenRequest:
    properties:
      absen:
        type: integer
      absen_flag:
        type: integer
      lokasi:
        type: string
    type: object
  request.UpdateELogBookRequest:
    properties:
      deskripsi:
        type: string
      end_time:
        type: integer
      jumlah:
        type: integer
      medical_record:
        type: string
      start_time:
        type: integer
      title:
        type: string
    type: object
  request.UpdateKonsulenRequest:
    properties:
      name:
        type: string
      spesialis:
        type: string
    type: object
  request.UpdateUserRequest:
    properties:
      is_activated:
        type: integer
      role:
        type: integer
      username:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: API yang digunakan untuk website SIPEKOM
  title: API Sipekom
  version: 0.0.1
paths:
  /api:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: server status.
      tags:
      - API
  /api/absen/{id_user}:
    get:
      description: get all Absen, mahasiswa have limited access
      parameters:
      - description: ID User
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get all Absen [mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - Absen
  /api/absen/create/{uri_base64}:
    get:
      description: get Absen by location.
      parameters:
      - description: Uri base64
        in: path
        name: uri_base64
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "create Absen [guest\U0001F512]."
      tags:
      - Absen
  /api/absen/delete/{id_absen}:
    delete:
      description: delete Absen by ID, only admin can delete absen.
      parameters:
      - description: ID Absen
        in: path
        name: id_absen
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "delete Absen [konsulen\U0001F512, mahasiswa\U0001F512, guest\U0001F512]."
      tags:
      - Absen
  /api/absen/get/{id_absen}:
    get:
      description: get Absen by ID Absen, mahasiswa have limited access.
      parameters:
      - description: ID Absen
        in: path
        name: id_absen
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get Absen [mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - Absen
  /api/absen/update/{id_absen}:
    put:
      description: update Absen by ID, only Admin can update Absen.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateAbsenRequest'
      - description: ID Absen
        in: path
        name: id_absen
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "update Absen [konsulen\U0001F512, mahasiswa\U0001F512, guest\U0001F512]."
      tags:
      - Absen
  /api/data/{search_query}:
    get:
      consumes:
      - '*/*'
      description: get data of user.
      parameters:
      - description: Search Query
        in: path
        name: search_query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: "get user data \U0001F9F1."
      tags:
      - API
  /api/elogbook/:
    get:
      description: get all ELogBook
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get all ELogBook [mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - ELogBook
  /api/elogbook/accepted/{id_elogbook}:
    put:
      description: Approved ELogBook by ID.
      parameters:
      - description: ID ELogBook
        in: path
        name: id_elogbook
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "Approved ELogBook [mahasiswa\U0001F512, guest\U0001F512]."
      tags:
      - ELogBook
  /api/elogbook/create:
    post:
      consumes:
      - application/json
      description: create new ELogBook.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateELogBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "create ELogBook [konsulen\U0001F512, mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - ELogBook
  /api/elogbook/delete/{id_elogbook}:
    delete:
      consumes:
      - application/json
      description: delete ELogBook by ID.
      parameters:
      - description: ID ELogBook
        in: path
        name: id_elogbook
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "delete ELogBook [konsulen\U0001F512, mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - ELogBook
  /api/elogbook/get/{id_elogbook}:
    get:
      description: get ELogBook by id user.
      parameters:
      - description: ID Elogbook
        in: path
        name: id_elogbook
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get ELogBook [mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - ELogBook
  /api/elogbook/rejected/{id_elogbook}:
    put:
      description: Approved ELogBook by ID.
      parameters:
      - description: ID ELogBook
        in: path
        name: id_elogbook
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "Approved ELogBook [mahasiswa\U0001F512, guest\U0001F512]."
      tags:
      - ELogBook
  /api/elogbook/update/{id_elogbook}:
    put:
      description: update ELogBook by ID.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateELogBookRequest'
      - description: ID ELogBook
        in: path
        name: id_elogbook
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "update ELogBook [konsulen\U0001F512, mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - ELogBook
  /api/konsulen/:
    get:
      description: get all absen
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get all Konsulen.
      tags:
      - Konsulen
  /api/konsulen/create:
    post:
      consumes:
      - application/json
      description: create new Konsulen.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateKonsulenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: create Konsulen.
      tags:
      - Konsulen
  /api/konsulen/get/{id_user}:
    get:
      description: get Konsulen by id.
      parameters:
      - description: ID User
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get Konsulen.
      tags:
      - Konsulen
  /api/konsulen/update/{id_user}:
    put:
      description: update Konsulen by id.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateKonsulenRequest'
      - description: User ID
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: update Konsulen.
      tags:
      - Konsulen
  /api/login:
    post:
      consumes:
      - application/json
      description: Login and Receive JWT Token.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Authorization.
      tags:
      - Authorization
  /api/lokasi/:
    get:
      description: get Lokasi by ID_lokasi
      parameters:
      - description: User ID
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get Lokasi [guest\U0001F512]."
      tags:
      - Lokasi
  /api/photo/{photo_name}:
    get:
      description: get Photo from photo name
      parameters:
      - description: Photo Name
        in: path
        name: photo_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get Photo [guest\U0001F512]."
      tags:
      - Photo
  /api/ppds/:
    get:
      description: get all PPDS
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get all PPDS [guest\U0001F512]."
      tags:
      - PPDS
  /api/ppds/auto:
    get:
      description: get Autocomplete for PPDS
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get Autocomplete for PPDS [guest\U0001F512]."
      tags:
      - PPDS
  /api/ppds/get/{id_user}:
    get:
      description: get all PPDS by id
      parameters:
      - description: User ID
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get all PPDS [guest\U0001F512]."
      tags:
      - PPDS
  /api/qr/get/{id_lokasi}:
    get:
      description: get qr codes based on id_lokasi.
      parameters:
      - description: ID Lokasi
        in: path
        name: id_lokasi
        required: true
        type: integer
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: "qr code image [mahasiswa\U0001F512, konsulen\U0001F512, guest\U0001F512]."
      tags:
      - API
  /api/user/:
    get:
      description: get all User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get all User [guest\U0001F512]."
      tags:
      - User
  /api/user/create:
    post:
      consumes:
      - application/json
      description: create new User.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "create User [konsulen\U0001F512, mahasiswa\U0001F512, guest\U0001F512]."
      tags:
      - User
  /api/user/data/{id_user}:
    get:
      description: get User data by id based on their role
      parameters:
      - description: User ID
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get User data based on role [guest\U0001F512]."
      tags:
      - User
  /api/user/delete/{id_user}:
    delete:
      description: delete User by id, mahasiswa and konsulen only can delete their
        own account
      parameters:
      - description: User ID
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "delete User [konsulen \U0001F9F1, mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - User
  /api/user/get/{id_user}:
    get:
      description: get User by id.
      parameters:
      - description: User ID
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "get User [guest\U0001F512]."
      tags:
      - User
  /api/user/update/{id_user}:
    put:
      description: update User by id, mahasiswa and konsulen only can update their
        own account not account data refer to specific role
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      - description: User ID
        in: path
        name: id_user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "update User [konsulen \U0001F9F1, mahasiswa \U0001F9F1, guest\U0001F512]."
      tags:
      - User
  /api/whoami:
    get:
      consumes:
      - '*/*'
      description: get validation of the token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: "check token validation [guest\U0001F512]."
      tags:
      - API
securityDefinitions:
  ApiKeyAuth:
    description: API Token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
