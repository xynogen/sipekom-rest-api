basePath: /
definitions:
  request.CreateUserRequest:
    properties:
      level:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  request.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  request.UpdateUserRequest:
    properties:
      is_activated:
        type: integer
      level:
        type: integer
      username:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: API yang digunakan untuk website SIPEKOM
  title: API Sipekom
  version: 0.0.1
paths:
  /api:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: server status.
      tags:
      - root
  /api/absen/:
    get:
      description: get all absen
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get all absen.
      tags:
      - Absen
  /api/absen/get/{id}:
    get:
      description: get absen by id user.
      parameters:
      - description: ID User
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get absen.
      tags:
      - Absen
  /api/elogbook/:
    get:
      description: get all E-Log Book
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get all E-Log Book.
      tags:
      - ELogBook
  /api/elogbook/get/{id}:
    get:
      description: get elogbook by id user.
      parameters:
      - description: ID User
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get elogbook.
      tags:
      - ELogBook
  /api/konsulen/:
    get:
      description: get all absen
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get all Konsulen.
      tags:
      - Konsulen
  /api/konsulen/get/{id}:
    get:
      description: get konsulen by id.
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get konsulen.
      tags:
      - Konsulen
  /api/login:
    post:
      consumes:
      - application/json
      description: login.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: authorization.
      tags:
      - Authorization
  /api/user/:
    get:
      description: get all user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get all user.
      tags:
      - User
  /api/user/create:
    post:
      consumes:
      - application/json
      description: create new user.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: create user.
      tags:
      - User
  /api/user/delete/{id}:
    delete:
      description: delete user by id.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: delete user.
      tags:
      - User
  /api/user/get/{id}:
    get:
      description: get user by id.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get user.
      tags:
      - User
  /api/user/update/{id}:
    put:
      description: update user by id.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: update user.
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    description: API Token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
